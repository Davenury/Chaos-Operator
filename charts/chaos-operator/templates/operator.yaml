apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.operator.deployment_name | default "chaos-operator" }}
  namespace: {{ .Values.namespace.name | default "default" }}
  {{ if .Values.operator.metrics.enabled }}
  annotations:
    prometheus.io/path: /metrics
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
  {{ if .Values.operator.annotations }}
  {{- range $key, $value := .Values.operator.annotations }}
    {{$key}}: {{$value}}
  {{- end}}
  {{ end }}
  {{ end }}
spec:
  selector:
    matchLabels:
      app: chaos-operator
  replicas: 1
  template:
    metadata:
      {{ if .Values.operator.metrics.enabled }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      {{ if .Values.operator.annotations }}
      {{- range $key, $value := .Values.operator.annotations }}
      {{$key}}: {{$value}}
      {{- end }}
      {{ end }}
      {{ end }}
      labels:
        app: chaos-operator
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name | default "chaos-operator" }}
      containers:
        - name: operator
          image: {{ .Values.operator.image | default "ghcr.io/davenury/chaos-operator:latest" }}
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 1
